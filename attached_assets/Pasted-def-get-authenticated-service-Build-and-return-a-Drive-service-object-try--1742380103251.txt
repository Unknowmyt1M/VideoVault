def get_authenticated_service():
    """Build and return a Drive service object"""
    try:
        if 'credentials' not in session:
            logger.debug("No credentials in session")
            return None

        # Parse credentials from session
        creds_data = json.loads(session['credentials'])
        logger.debug(f"Credentials structure: {list(creds_data.keys())}")

        # Ensure all required fields are present
        required_fields = ['token', 'refresh_token', 'token_uri', 'client_id', 'client_secret', 'scopes']
        missing_fields = [field for field in required_fields if field not in creds_data]
        
        if missing_fields:
            logger.error(f"Credentials missing required fields: {missing_fields}")
            flash(f"Authentication issue: Missing {', '.join(missing_fields)}")
            return None

        # Create credentials object
        credentials = Credentials(
            token=creds_data['token'],
            refresh_token=creds_data['refresh_token'],
            token_uri=creds_data['token_uri'],
            client_id=creds_data['client_id'],
            client_secret=creds_data['client_secret'],
            scopes=creds_data['scopes']
        )

        # Refresh if expired
        if credentials and credentials.expired and credentials.refresh_token:
            credentials.refresh(Request())

            # Update session with refreshed credentials
            updated_creds = {
                'token': credentials.token,
                'refresh_token': credentials.refresh_token,
                'token_uri': credentials.token_uri,
                'client_id': credentials.client_id,
                'client_secret': credentials.client_secret,
                'scopes': credentials.scopes
            }
            session['credentials'] = json.dumps(updated_creds)

        return build('drive', 'v3', credentials=credentials)
    except Exception as e:
        logger.error(f"Error getting authenticated service: {e}")
        return None